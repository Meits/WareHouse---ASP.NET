// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WareHouse.AppContext;

namespace WareHouse.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190414081058_AddUsers2")]
    partial class AddUsers2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WareHouse.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(64);

                    b.Property<Guid>("StockId");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("WareHouse.Entities.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("stocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eea422be-a37e-4593-b9d5-0dadd1d66496"),
                            Name = "Stock 1"
                        },
                        new
                        {
                            Id = new Guid("508516f0-7b69-4ea7-9d8f-9d8fceacd6bc"),
                            Name = "Stock 2"
                        },
                        new
                        {
                            Id = new Guid("db46e9f4-0c9d-47d3-87df-2ba622493da6"),
                            Name = "Stock 3"
                        });
                });

            modelBuilder.Entity("WareHouse.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(64);

                    b.Property<string>("Firstname")
                        .HasColumnName("firstname")
                        .HasMaxLength(64);

                    b.Property<string>("Lastname")
                        .HasColumnName("lastname")
                        .HasMaxLength(64);

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasMaxLength(64);

                    b.Property<string>("Token")
                        .HasColumnName("token")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0761ba0c-fa50-4e4a-8b38-29bb0f8e3753"),
                            Email = "admin@admin.com",
                            Firstname = "Admin",
                            Lastname = "Admin",
                            Password = "gwBdINtuCcv9k+V3I2z1vRMkKHxJ0/VOWxFhUArEuz8=",
                            Token = "7d8das8tdasd8as7d8asygd8as7gd8sa"
                        });
                });

            modelBuilder.Entity("WareHouse.Entities.Product", b =>
                {
                    b.HasOne("WareHouse.Entities.Stock", "Stock")
                        .WithMany("Products")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
