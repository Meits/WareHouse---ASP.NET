// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WareHouse.AppContext;

namespace WareHouse.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190416200904_ChangeUser")]
    partial class ChangeUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WareHouse.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(64);

                    b.Property<Guid>("StockId");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("WareHouse.Entities.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("stocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("17ecc703-4bdc-472b-90f6-328af258f1e1"),
                            Name = "Stock 1"
                        },
                        new
                        {
                            Id = new Guid("541904cb-e31f-43a4-93cf-23c8837b4f7d"),
                            Name = "Stock 2"
                        },
                        new
                        {
                            Id = new Guid("a2dccc9f-851f-489f-9cc6-978f0d3fbfa8"),
                            Name = "Stock 3"
                        });
                });

            modelBuilder.Entity("WareHouse.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(64);

                    b.Property<string>("Firstname")
                        .HasColumnName("firstname")
                        .HasMaxLength(64);

                    b.Property<string>("Lastname")
                        .HasColumnName("lastname")
                        .HasMaxLength(64);

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasMaxLength(64);

                    b.Property<string>("Salt")
                        .HasColumnName("salt")
                        .HasMaxLength(64);

                    b.Property<string>("Token")
                        .HasColumnName("token")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f426c63e-e558-4a81-80cf-8a1191c8a3f6"),
                            Email = "admin@admin.com",
                            Firstname = "Admin",
                            Lastname = "Admin",
                            Password = "a08Qsu+FQDmwDAjOUUnPMmqiARLAgp8wsnV++iqIOlY=",
                            Salt = "pMA+IGiu5fcZBCj32yOcGQ==",
                            Token = "7d8das8tdasd8as7d8asygd8as7gd8sa"
                        });
                });

            modelBuilder.Entity("WareHouse.Entities.Product", b =>
                {
                    b.HasOne("WareHouse.Entities.Stock", "Stock")
                        .WithMany("Products")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
